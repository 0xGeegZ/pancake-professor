generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Round {
  id       String @id @default(cuid())
  epoch    String
  position String
  Bet      Bet[]
}

model Bet {
  id        String  @id @default(cuid())
  position  String
  createdAt String
  round     Round   @relation(fields: [roundId], references: [id])
  Player    Player? @relation(fields: [playerId], references: [id])
  playerId  String?
  roundId   String
}

model Player {
  id         String @id @default(cuid())
  totalBNB   String
  totalBets  String
  winRate    String
  averageBNB String
  netBNB     String
  bets       Bet[]
}

enum FavoriteType {
  LIKE
  DISLIKE
}

model Favorite {
  id         String       @id @default(cuid())
  createdAt  DateTime     @default(now())
  modifiedAt DateTime     @default(now())
  player     String
  type       FavoriteType
  comment    String?
  note       Int?
  user       User         @relation(fields: [userId], references: [id])
  userId     String
}

model User {
  id           String      @id @default(cuid())
  registeredAt DateTime    @default(now())
  loginAt      DateTime    @default(now())
  createdAt    DateTime    @default(now())
  modifiedAt   DateTime    @default(now())
  email        String?     @unique
  address      String      @unique
  generated    String      @unique
  private      String      @unique
  name         String?
  isActivated  Boolean     @default(false)
  strategies   Strategie[]
  favorites    Favorite[] //TODO
  projects     Project[]
  referrals    User[]      @relation("UserToUser")
  User         User?       @relation("UserToUser", fields: [userId], references: [id])
  userId       String?
}

model Strategie {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  modifiedAt       DateTime @default(now())
  name             String?  @default("") //TODO
  color            String?  @default("") //TODO
  player           String
  generated        String   @unique
  private          String   @unique
  betAmountPercent Float    @default(0.0) //TODO
  increaseAmount   Float?   @default(0.0) //TODO
  decreaseAmount   Float?   @default(0.0) //TODO
  startedAmount    Float
  currentAmount    Float
  maxLooseAmount   Float?   @default(0.0) //TODO DELETE AFTER UPDATE
  minWinAmount     Float?   @default(0.0) //TODO DELETE AFTER UPDATE
  stopLoss         Int?     @default(0) //TODO
  takeProfit       Int?     @default(0) //TODO
  isTrailing       Boolean  @default(false) //TODO
  roundsCount      Int      @default(0)
  playsCount       Int      @default(0)
  isActive         Boolean  @default(true)
  isDeleted        Boolean  @default(false)
  isError          Boolean  @default(false)
  isRunning        Boolean  @default(false)
  isNeedRestart    Boolean  @default(false)
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  history          String[] //TODO
}

model Project {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now())
  users      User[]
  name       String
  slug       String   @unique

  stripeCustomerId       String?   @unique
  stripeSubscriptionId   String?   @unique
  stripePriceId          String?
  stripeCurrentPeriodEnd DateTime?
}
